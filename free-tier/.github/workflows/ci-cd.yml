name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::<ton-id>:role/GitHubActionsDeployRole
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Load Terraform outputs
        id: tf_outputs
        run: |
          echo "ECR_JAVA=$(jq -r .ecr_repository_springboot_url.value terraform/outputs.json)" >> $GITHUB_ENV
          echo "ECR_ADMIN=$(jq -r .ecr_repository_frontend_admin_url.value terraform/outputs.json)" >> $GITHUB_ENV
          echo "ECR_PUBLIC=$(jq -r .ecr_repository_frontend_public_url.value terraform/outputs.json)" >> $GITHUB_ENV
          echo "EKS_CLUSTER_NAME=$(jq -r .eks_cluster_name.value terraform/outputs.json)" >> $GITHUB_ENV

      - name: Build JAR
        run: mvn clean package --file free-tier/java-api/pom.xml

      - name: Build & Push Java Image
        run: |
          docker build -t $ECR_JAVA:latest ./free-tier/java-api
          docker push $ECR_JAVA:latest

      - name: Build & Push Frontend Admin
        run: |
          cd free-tier/frontend-admin
          npm install
          npm run build -- --output-path=dist
          cd ../..
          docker build -t $ECR_ADMIN:latest -f free-tier/frontend-admin/Dockerfile free-tier/frontend-admin
          docker push $ECR_ADMIN:latest

      - name: Build & Push Frontend Public
        run: |
          cd free-tier/frontend-public
          npm install
          npm run build -- --output-path=dist
          cd ../..
          docker build -t $ECR_PUBLIC:latest -f free-tier/frontend-public/Dockerfile free-tier/frontend-public
          docker push $ECR_PUBLIC:latest

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --region us-east-1 --name $EKS_CLUSTER_NAME

      - name: Deploy Java API via Helm
        run: |
          helm upgrade --install java-api ./charts/java-api \
            --set image.repository=$ECR_JAVA \
            --set image.tag=latest

      - name: Deploy Frontend Admin via Helm
        run: |
          helm upgrade --install frontend-admin ./charts/frontend-admin \
            --set image.repository=$ECR_ADMIN \
            --set image.tag=latest

      - name: Deploy Frontend Public via Helm
        run: |
          helm upgrade --install frontend-public ./charts/frontend-public \
            --set image.repository=$ECR_PUBLIC \
            --set image.tag=latest
